digraph stem {
	graph [rankdir=LR];
	node [shape=box];
	edge [dir=back];
	
	gamemath -> {collision; glgraphics; serialization; "3dmodelio"}
	serialization -> {"3dmodelio"; binaryserialization; dynamictypes; glbitmapfont; gltexture; inputcontroller; jsonserialization; preferences}
	shell -> {eaglshell; glutshell; nsopenglshell; stubshell; wglshell; glxshell};
	stemobject -> {"3dmodelio"; bitmapimage; collision; dynamictypes; glgraphics; inputcontroller; pcmaudio; preferences; resourcemanager; serialization; utilities};
	unittest -> template_stemlib
	gamepad;
	
	bitmapimage -> pngimageio;
	glgraphics -> {"3dmodelio"};
	pcmaudio -> vorbisaudioio;
	utilities -> {"3dmodelio"; glgraphics; jsonio; pngimageio; preferences; screenmanager; binaryserialization; glslshader; vorbisaudioio; inputcontroller; serialization; dynamictypes};
	
	dynamictypes -> preferences;
	
	gamepad -> inputcontroller;
	gltexture -> glbitmapfont;
	jsonio -> jsonserialization;
	
	shell [group="shells"];
	eaglshell [group="shells"];
	glutshell [group="shells"];
	glxshell [group="shells"];
	nsopenglshell [group="shells"];
	stubshell [group="shells"];
	wglshell [group="shells"];
	
	serialization [group="serialization"];
	binaryserialization [group="serialization"];
	jsonserialization [group="serialization"];
	
	"3dmodelio" [group="opengl"];
	glgraphics [group="opengl"];
	gltexture [group="opengl"];
	glbitmapfont [group="opengl"];
	glslshader [group="opengl"];
	
	bitmapimage [group="image"];
	pngimageio [group="image"];
	
	pcmaudio [group="audio"];
	vorbisaudioio [group="audio"];
}
